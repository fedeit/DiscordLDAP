{"version":3,"sources":["logo.svg","statusPage.js","registerPage.js","App.js","reportWebVitals.js","index.js"],"names":["leftColumnStyle","textAlign","rightColumnStyle","StatusPage","className","src","style","height","icon","faPlus","color","width","faExclamationCircle","faCheckCircle","Register","props","path","window","location","pathname","replace","message","undefined","length","state","verified","password","username","val","this","setState","event","preventDefault","axios","post","code","then","res","data","catch","err","padding","size","Form","onSubmit","handleSubmit","bind","Group","controlId","Label","Control","autoFocus","type","value","onChange","e","setUsername","target","name","setPassword","Button","block","disabled","validateForm","React","Component","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,I,qDCKXA,EAAkB,CACpBC,UAAW,QAGTC,EAAmB,CACrBD,UAAW,SA8CEE,MA3Cf,WACE,OACE,8BACE,yBAAQC,UAAU,aAAlB,UACE,gCACE,+BACE,6BAAI,qBAAKC,IAAI,uBAAuBC,MAAO,CAACC,OAAQ,YACpD,6BAAI,cAAC,IAAD,CAAiBC,KAAMC,IAAQC,MAAM,YACzC,6BAAI,qBAAKL,IAAI,mBAAmBC,MAAO,CAACC,OAAQ,iBAGpD,oBAAID,MAAO,CAACL,UAAW,UAAvB,wCACA,wBAAOK,MAAO,CAACK,MAAO,OAAtB,UACE,+BACE,oBAAIL,MAAON,EAAX,oBACA,oBAAIM,MAAOJ,EAAX,SACE,cAAC,IAAD,CAAiBM,KAAMI,IAAqBF,MAAM,gBAGtD,+BACE,oBAAIJ,MAAON,EAAX,yBACA,oBAAIM,MAAOJ,EAAX,SACE,cAAC,IAAD,CAAiBM,KAAMK,IAAeH,MAAM,eAGhD,+BACE,oBAAIJ,MAAON,EAAX,kBACA,oBAAIM,MAAOJ,EAAX,SACE,cAAC,IAAD,CAAiBM,KAAMK,IAAeH,MAAM,eAGhD,+BACE,oBAAIJ,MAAON,EAAX,sBACA,oBAAIM,MAAOJ,EAAX,SACE,cAAC,IAAD,CAAiBM,KAAMK,IAAeH,MAAM,wB,gDC0C3CI,G,8DA/Eb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIC,EAAOC,OAAOC,SAASC,SAASC,QAAQ,MAAO,IAC/CC,OAAUC,EAHG,OAIG,KAAhBN,EAAKO,SACPF,EAAU,oDAEZ,EAAKG,MAAQ,CAACC,UAAU,EAAOC,SAAU,GAAIC,SAAS,GAAIX,KAAMA,EAAMK,QAASA,GAP9D,E,wDAUPO,GACVC,KAAKC,SAAS,CAACH,SAAUC,M,kCAGfA,GACVC,KAAKC,SAAS,CAACJ,SAAUE,M,qCAIzB,OAAOC,KAAKL,MAAMG,SAASJ,OAAS,GAAKM,KAAKL,MAAME,SAASH,OAAS,I,mCAG3DQ,GAAQ,IAAD,OAClBA,EAAMC,iBACNC,IAAMC,KAAK,UAAW,CAACR,SAAUG,KAAKL,MAAME,SAAUC,SAAUE,KAAKL,MAAMG,SAAUQ,KAAMN,KAAKL,MAAMR,OACrGoB,MAAK,SAACC,GACDA,EAAIC,KAAKb,SACX,EAAKK,SAAS,CAACL,UAAU,EAAMJ,QAASgB,EAAIC,KAAKjB,UAEjD,EAAKS,SAAS,CAACL,UAAU,EAAOJ,QAASgB,EAAIC,KAAKjB,aAGrDkB,OAAM,SAACC,GACJ,EAAKV,SAAS,CAACL,UAAU,EAAOJ,QAASmB,EAAInB,e,+BAIzC,IAAD,OACP,OAAIQ,KAAKL,MAAMC,SAEX,sBAAKnB,MAAO,CAACmC,QAAS,OAAtB,UACE,cAAC,IAAD,CAAiBjC,KAAMK,IAAeH,MAAM,QAAQgC,KAAK,QACzD,6BAAKb,KAAKL,MAAMH,aAKpB,sBAAKjB,UAAU,QAAf,UACI,oBAAIE,MAAO,CAACL,UAAW,UAAvB,kCACA,mBAAGK,MAAO,CAACI,MAAO,OAAlB,SAA2BmB,KAAKL,MAAMH,UACtC,eAACsB,EAAA,EAAD,CAAMC,SAAUf,KAAKgB,aAAaC,KAAKjB,MAAvC,UACE,eAACc,EAAA,EAAKI,MAAN,CAAYL,KAAK,KAAKM,UAAU,WAAhC,UACE,cAACL,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,WAAS,EACTC,KAAK,OACLC,MAAOxB,KAAKL,MAAMG,SAClB2B,SAAU,SAACC,GAAD,OAAO,EAAKC,YAAYD,EAAEE,OAAOJ,QAC3CK,KAAK,gBAGT,eAACf,EAAA,EAAKI,MAAN,CAAYL,KAAK,KAAKM,UAAU,WAAhC,UACE,cAACL,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKO,QAAN,CACEE,KAAK,WACLC,MAAOxB,KAAKL,MAAME,SAClB4B,SAAU,SAACC,GAAD,OAAO,EAAKI,YAAYJ,EAAEE,OAAOJ,QAC3CK,KAAK,gBAGT,cAACE,EAAA,EAAD,CAAQC,OAAK,EAACnB,KAAK,KAAKU,KAAK,SAASU,UAAWjC,KAAKkC,eAAtD,6B,GAvEWC,IAAMC,YCoBdC,MAjBf,WACE,OACE,qBAAK9D,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+D,OAAK,EAACnD,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCTGoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b66ec2c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faExclamationCircle, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nlet leftColumnStyle = {\n  textAlign: \"left\"\n}\n\nlet rightColumnStyle = {\n  textAlign: \"right\"\n}\n\nfunction StatusPage () {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <table>\n          <tr>\n            <td><img src=\"active-directory.png\" style={{height: \"60px\"}}/></td>\n            <td><FontAwesomeIcon icon={faPlus} color=\"white\" /></td>\n            <td><img src=\"discord-logo.png\" style={{height: \"60px\"}}/></td>\n          </tr>\n        </table>\n        <h2 style={{textAlign: \"center\"}}>DiscordLDAP Service Status</h2>\n        <table style={{width: \"40%\"}}>\n          <tr>\n            <td style={leftColumnStyle}>Mailer</td>\n            <td style={rightColumnStyle}>\n              <FontAwesomeIcon icon={faExclamationCircle} color=\"orange\" />\n            </td>\n          </tr>\n          <tr>\n            <td style={leftColumnStyle}>Discord API</td>\n            <td style={rightColumnStyle}>\n              <FontAwesomeIcon icon={faCheckCircle} color=\"green\" />\n            </td>\n          </tr>\n          <tr>\n            <td style={leftColumnStyle}>LDAP</td>\n            <td style={rightColumnStyle}>\n              <FontAwesomeIcon icon={faCheckCircle} color=\"green\" />\n            </td>\n          </tr>\n          <tr>\n            <td style={leftColumnStyle}>Database</td>\n            <td style={rightColumnStyle}>\n              <FontAwesomeIcon icon={faCheckCircle} color=\"green\" />\n            </td>\n          </tr>\n        </table>\n      </header>\n    </div>\n  );\n}\n\nexport default StatusPage;","import React from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Login.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    let path = window.location.pathname.replace(/\\//g, '');\n    let message = undefined;\n    if (path.length !== 32) {\n      message = \"Invalid link! Make sure you copied it correctly!\";\n    }\n    this.state = {verified: false, password: \"\", username:\"\", path: path, message: message};\n  }\n\n  setUsername(val) {\n    this.setState({username: val})\n  }\n\n  setPassword(val) {\n    this.setState({password: val})\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios.post(\"/verify\", {password: this.state.password, username: this.state.username, code: this.state.path})\n    .then((res) => {\n      if (res.data.verified) {\n        this.setState({verified: true, message: res.data.message});\n      } else {\n        this.setState({verified: false, message: res.data.message});\n      }\n    })\n    .catch((err) => {\n        this.setState({verified: false, message: err.message});\n    })\n  }\n\n  render() {\n    if (this.state.verified) {\n      return (\n        <div style={{padding: '20%'}}>\n          <FontAwesomeIcon icon={faCheckCircle} color=\"green\" size='10x'/>\n          <h1>{this.state.message}</h1>\n        </div>\n      );\n    }\n    return (\n      <div className=\"Login\">\n          <h2 style={{textAlign: \"center\"}}>Discord Verification</h2>\n          <p style={{color: \"red\"}}>{this.state.message}</p>\n          <Form onSubmit={this.handleSubmit.bind(this)}>\n            <Form.Group size=\"lg\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                autoFocus\n                type=\"text\"\n                value={this.state.username}\n                onChange={(e) => this.setUsername(e.target.value)}\n                name=\"username\" \n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={this.state.password}\n                onChange={(e) => this.setPassword(e.target.value)}\n                name=\"password\"\n              />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" disabled={!this.validateForm()}>\n              Login\n            </Button>\n          </Form>\n      </div>\n    );\n  }\n}\n\nexport default Register;","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport StatusPage from './statusPage.js';\nimport Register from './registerPage.js';\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n      <Router>\n        <Switch>\n          <Route exact path=\"/status\">\n            <StatusPage />\n          </Route>\n          <Route path=\"/\">\n            <Register />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}